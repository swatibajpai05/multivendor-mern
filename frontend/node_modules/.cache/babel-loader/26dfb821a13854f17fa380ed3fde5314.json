{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELIVER_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${orderId}/deliver`, {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/swati/Desktop/amazona/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listOrderMine","listOrders","console","log","deleteOrder","delete","deliverOrder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,uBAVF,EAWEC,oBAXF,EAYEC,uBAZF,EAaEC,kBAbF,EAcEC,kBAdF,EAeEC,eAfF,EAgBEC,oBAhBF,EAiBEC,oBAjBF,EAkBEC,iBAlBF,EAmBEC,qBAnBF,EAoBEC,qBApBF,EAqBEC,kBArBF,QAsBO,6BAtBP;AAwBA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAExB,oBAAR;AAA8ByB,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AACJK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFJ,QAAQ,EAFZ;AAGA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAACgC,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC;AACtDS,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADjC;AAD6C,KAAjC,CAAvB;AAKAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEvB,oBAAR;AAA8BwB,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA5C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE1B;AAAR,KAAD,CAAR;AACAmC,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAZD,CAYE,OAAOC,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEzB,iBADC;AAEP0B,MAAAA,OAAO,EACLU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAvBM;AAwBP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AACrED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAErB,qBAAR;AAA+BsB,IAAAA,OAAO,EAAEc;AAAxC,GAAD,CAAR;AACA,QAAM;AACJb,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAAC2C,GAAN,CAAW,eAAcD,OAAQ,EAAjC,EAAoC;AACzDT,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AADgD,KAApC,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEpB,qBAAR;AAA+BqB,MAAAA,OAAO,EAAEG;AAAxC,KAAD,CAAR;AACD,GALD,CAKE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEtB,kBAAR;AAA4BuB,MAAAA,OAAO,EAAEY;AAArC,KAAD,CAAR;AACD;AACF,CAjBM;AAkBP,OAAO,MAAMI,QAAQ,GAAG,CAACpB,KAAD,EAAQqB,aAAR,KAA0B,OAChDpB,QADgD,EAEhDC,QAFgD,KAG7C;AACHD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEnB,iBAAR;AAA2BoB,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASqB,MAAAA;AAAT;AAApC,GAAD,CAAR;AACA,QAAM;AACJhB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW/B,KAAK,CAAC8C,GAAN,CAAW,eAActB,KAAK,CAACuB,GAAI,MAAnC,EAA0CF,aAA1C,EAAyD;AACxEZ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AAD+D,KAAzD,CAAjB;AAGAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEjB,iBAAR;AAA2BkB,MAAAA,OAAO,EAAEG;AAApC,KAAD,CAAR;AACD,GALD,CAKE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAElB,cAAR;AAAwBmB,MAAAA,OAAO,EAAEY;AAAjC,KAAD,CAAR;AACD;AACF,CApBM;AAqBP,OAAO,MAAMQ,aAAa,GAAG,MAAM,OAAOvB,QAAP,EAAiBC,QAAjB,KAA8B;AAC/DD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEhB;AAAR,GAAD,CAAR;AACA,QAAM;AACJkB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAAC2C,GAAN,CAAU,kBAAV,EAA8B;AACnDV,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADjC;AAD0C,KAA9B,CAAvB;AAKAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEd,uBAAR;AAAiCe,MAAAA,OAAO,EAAEG;AAA1C,KAAD,CAAR;AACD,GAPD,CAOE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf,oBAAR;AAA8BgB,MAAAA,OAAO,EAAEY;AAAvC,KAAD,CAAR;AACD;AACF,CAnBM;AAoBP,OAAO,MAAMS,UAAU,GAAG,MAAM,OAAOxB,QAAP,EAAiBC,QAAjB,KAA8B;AAC5DD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;AACA,QAAM;AACJe,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAAC2C,GAAN,CAAU,aAAV,EAAyB;AAC9CV,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AADqC,KAAzB,CAAvB;AAGAe,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACAN,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,kBAAR;AAA4Ba,MAAAA,OAAO,EAAEG;AAArC,KAAD,CAAR;AACD,GAND,CAME,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEX,eAAR;AAAyBY,MAAAA,OAAO,EAAEY;AAAlC,KAAD,CAAR;AACD;AACF,CAlBM;AAmBP,OAAO,MAAMY,WAAW,GAAIV,OAAD,IAAa,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AACpED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEV,oBAAR;AAA8BW,IAAAA,OAAO,EAAEc;AAAvC,GAAD,CAAR;AACA,QAAM;AACJb,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW/B,KAAK,CAACqD,MAAN,CAAc,eAAcX,OAAQ,EAApC,EAAuC;AACtDT,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AAD6C,KAAvC,CAAjB;AAGAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,oBAAR;AAA8BU,MAAAA,OAAO,EAAEG;AAAvC,KAAD,CAAR;AACD,GALD,CAKE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,iBAAR;AAA2BS,MAAAA,OAAO,EAAEY;AAApC,KAAD,CAAR;AACD;AACF,CAjBM;AAkBP,OAAO,MAAMc,YAAY,GAAIZ,OAAD,IAAa,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AACrED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP,qBAAR;AAA+BQ,IAAAA,OAAO,EAAEc;AAAxC,GAAD,CAAR;AACA,QAAM;AACJb,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFJ,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW/B,KAAK,CAAC8C,GAAN,CACd,eAAcJ,OAAQ,UADR,EAEf,EAFe,EAGf;AACET,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AADX,KAHe,CAAjB;AAOAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,qBAAR;AAA+BO,MAAAA,OAAO,EAAEG;AAAxC,KAAD,CAAR;AACD,GATD,CASE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,kBAAR;AAA4BM,MAAAA,OAAO,EAAEY;AAArC,KAAD,CAAR;AACD;AACF,CArBM","sourcesContent":["import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_MINE_LIST_REQUEST,\n  ORDER_MINE_LIST_FAIL,\n  ORDER_MINE_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    const { data } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_MINE_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({ type: ORDER_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/orders', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  }\n};\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/orders/${orderId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  }\n};\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DELIVER_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(\n      `/api/orders/${orderId}/deliver`,\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  }\n};"]},"metadata":{},"sourceType":"module"}