{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer, productCreateReducer, productUpdateReducer, productDeleteReducer, productCategoryListReducer, productReviewCreateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers'; // import { userSigninReducer } from './reducers/userReducers';\n\nimport { userRegisterReducer, userSigninReducer, userDetailsReducer, userUpdateProfileReducer, userDeleteReducer, userListReducer, userUpdateReducer, userTopSellerListReducer, userAddressMapReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderMineListReducer, orderListReducer, orderDeleteReducer, orderDeliverReducer } from './reducers/orderReducers'; // import data from './data'admin@example.com\n// const initialState = {};\n\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userTopSellersList: userTopSellerListReducer,\n  productCategoryList: productCategoryListReducer,\n  productReviewCreate: productReviewCreateReducer,\n  userAddressMap: userAddressMapReducer,\n  Order\n}); //to put data in chrome extension\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/swati/Desktop/amazona/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","productListReducer","productDetailsReducer","productCreateReducer","productUpdateReducer","productDeleteReducer","productCategoryListReducer","productReviewCreateReducer","cartReducer","userRegisterReducer","userSigninReducer","userDetailsReducer","userUpdateProfileReducer","userDeleteReducer","userListReducer","userUpdateReducer","userTopSellerListReducer","userAddressMapReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderMineListReducer","orderListReducer","orderDeleteReducer","orderDeliverReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","orderCreate","orderDetails","userRegister","orderPay","orderMineList","userDetails","userUpdateProfile","userUpdate","productCreate","productUpdate","productDelete","orderList","orderDelete","orderDeliver","userList","userDelete","userTopSellersList","productCategoryList","productReviewCreate","userAddressMap","Order","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"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","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer,\n   productCreateReducer, productUpdateReducer,\n    productDeleteReducer, \n    productCategoryListReducer,\n    productReviewCreateReducer} from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\n\n// import { userSigninReducer } from './reducers/userReducers';\nimport {\n  userRegisterReducer,\nuserSigninReducer,\nuserDetailsReducer,\nuserUpdateProfileReducer,\nuserDeleteReducer,\nuserListReducer,\nuserUpdateReducer,\nuserTopSellerListReducer,\nuserAddressMapReducer,\n} from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer , orderMineListReducer, orderListReducer, orderDeleteReducer,orderDeliverReducer} from './reducers/orderReducers';\n// import data from './data'admin@example.com\n// const initialState = {};\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo')\n      ? JSON.parse(localStorage.getItem('userInfo'))\n      : null,\n  },\n    cart: {\n      cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems'))\n        : [],\n        shippingAddress: localStorage.getItem('shippingAddress')\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\n      : {},\n      paymentMethod: 'PayPal',\n    },\n  };\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userTopSellersList: userTopSellerListReducer,\n  productCategoryList: productCategoryListReducer,\n  productReviewCreate: productReviewCreateReducer,\n  userAddressMap: userAddressMapReducer,\n  Order\n  \n});\n\n  //to put data in chrome extension\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}