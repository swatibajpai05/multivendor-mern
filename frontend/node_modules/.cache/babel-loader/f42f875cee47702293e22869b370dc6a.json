{"ast":null,"code":"var _jsxFileName = \"/home/swati/Desktop/amazona/frontend/src/components/ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\nexport default function ChatBox(props) {\n  _s();\n\n  const {\n    userInfo\n  } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([{\n    name: 'Admin',\n    body: 'Hello there, Please ask your question.'\n  }]);\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      socket.on('message', data => {\n        setMessages([...messages, {\n          body: data.body,\n          name: data.name\n        }]);\n      });\n    }\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([...messages, {\n        body: messageBody,\n        name: userInfo.name\n      }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id\n        });\n      }, 1000);\n    }\n  };\n\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: supportHandler,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Support \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeHandler,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: uiMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: `${msg.name}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), \" \", msg.body]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: messageBody,\n            onChange: e => setMessageBody(e.target.value),\n            type: \"text\",\n            placeholder: \"type message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatBox, \"QRqnF/YaGf4+N1r6BkbEC4FnPQM=\");\n\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/home/swati/Desktop/amazona/frontend/src/components/ChatBox.js"],"names":["React","useEffect","useRef","useState","socketIOClient","ENDPOINT","window","location","host","indexOf","ChatBox","props","userInfo","socket","setSocket","uiMessagesRef","isOpen","setIsOpen","messageBody","setMessageBody","messages","setMessages","name","body","current","scrollBy","top","clientHeight","left","behavior","emit","_id","isAdmin","on","data","supportHandler","console","log","sk","submitHandler","e","preventDefault","trim","alert","setTimeout","closeHandler","map","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5000'\n    : window.location.host;\n\nexport default function ChatBox(props) {\n  const { userInfo } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([\n    { name: 'Admin', body: 'Hello there, Please ask your question.' },\n  ]);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      socket.on('message', (data) => {\n        setMessages([...messages, { body: data.body, name: data.name }]);\n      });\n    }\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id,\n        });\n      }, 1000);\n    }\n  };\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  return (\n    <div className=\"chatbox\">\n      {!isOpen ? (\n        <button type=\"button\" onClick={supportHandler}>\n          <i className=\"fa fa-support\" />\n        </button>\n      ) : (\n        <div className=\"card card-body\">\n          <div className=\"row\">\n            <strong>Support </strong>\n            <button type=\"button\" onClick={closeHandler}>\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <ul ref={uiMessagesRef}>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{`${msg.name}: `}</strong> {msg.body}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <form onSubmit={submitHandler} className=\"row\">\n              <input\n                value={messageBody}\n                onChange={(e) => setMessageBody(e.target.value)}\n                type=\"text\"\n                placeholder=\"type message\"\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}